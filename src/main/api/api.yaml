openapi: 3.0.0
info:
  version: "1.0.0"
  title: "Authorization API"
servers:
  - url: "http://localhost:8080"
    description: "Local server"
paths:
  /authorize:
    post:
      tags:
        - authorization
      summary: "Authorize a user"
      description: "Allows a user to authorize access to the API"
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: "The username of the user"
                password:
                  type: string
                  description: "The password of the user"
              required:
                - username
                - password
      responses:
        '200':
          description: "Authorization successful"
          content:
            application/json:
              schema:
                type: object
                properties:
                  authorization_token:
                    type: string
                    description: "The authorization token"
                  role:
                    type: string
                    description: "The role of the authorized user (USER or ADMIN)"
        '403':
          description: "Authorization unsuccessful"
  /projects:
    get:
      summary: "get all user's projects"
      security:
        - basicAuth: [ ]
      responses:
        '200':
          description: "Project's of user retrieved successfully"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Project"
        '403':
          $ref: "#/components/responses/UnauthorizedError"
    post:
      summary: "create new project"
      security:
        - basicAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectUserCard"
      responses:
        '200':
          description: "New project created successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectUserCard"

  /projects/{id}:
    get:
      summary: "get detailed info of project"
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: "ID of the project to retrieve"
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "Project's info retrieved successfully"
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/ProjectUserCard"
        '403':
          $ref: "#/components/responses/UnauthorizedError"

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  schemas:
    Project:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: "ID"
        name:
          type: string
          description: "Name"
        description:
          type: string
          format: email
          description: "Description"
        status:
          type: string
          enum:
            - ACTIVE
            - STOPPED
            - ERROR
          description: "Status"
        createdDate:
          type: string
          format: date-time
          pattern: "yyyy-MM-dd'T'HH:mm:ss.SSSZ"
          example: "2023-05-01T14:30:00.000-0700"
        cpuConsumption:
          type: number
          format: double
          example: 0.5
          description: "cpu consumption metric at this time"
        cpuRequest:
          type: number
          format: double
          example: 1
          description: "cpu requested for this project"
        ramConsumption:
          type: number
          format: double
          example: 0.5
          description: "ram consumption metric at this time"
        ramRequest:
          type: number
          format: double
          example: 1
          description: "ram requested for this project"
        storageConsumption:
          type: number
          format: double
          example: 0.5
          description: "storage consumption metric at this time"
        storageRequest:
          type: number
          format: double
          example: 1
          description: "storage requested for this project"
    ProjectUserCard:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: "ID of project."
        name:
          type: string
          description: "Name"
        description:
          type: string
          format: email
          description: "Description"
        status:
          type: string
          enum:
            - ACTIVE
            - STOPPED
            - ERROR
          description: "Status"
        type:
          type: string
          enum:
            - DOCKER
            - PYTHON
            - JAVA
        gitUrl:
          type: string
          example: "https://github.com/bratzelk/spring-boot-hello-world.git"
          description: "git repository of deployed app"
        ports:
          type: array
          items:
            type: string
            format: int32
            example: "8080:8080"
        envs:
          type: array
          items:
            type: string
            example: "SERVER_PORT=8080"
  responses:
    UnauthorizedError:
      description: "Unauthorized access error"
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: "The error message"
          example:
            error: "Unauthorized: Invalid Auth token"
      
    
